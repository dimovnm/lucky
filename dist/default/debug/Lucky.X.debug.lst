

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 08 01:07:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	10F200
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	jmp_tab,global,class=ENTRY,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x1C,4
    13      000                     
    14                           ; Version 2.40
    15                           ; Generated 06/12/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC10F200 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49      000                     	;# 
    50      001                     	;# 
    51      002                     	;# 
    52      003                     	;# 
    53      004                     	;# 
    54      005                     	;# 
    55      006                     	;# 
    56      006                     _TRIS	set	6
    57      006                     _GPIO	set	6
    58      000                     _OPTION	set	0
    59      005                     _OSCCAL	set	5
    60      033                     _GP3	set	51
    61      032                     _GP2	set	50
    62                           
    63                           	psect	cinit
    64      001                     start_initialization:	
    65                           ; #config settings
    66                           
    67      001                     __initialization:
    68      001                     end_of_initialization:	
    69                           ;End of C runtime variable initialization code
    70                           
    71      001                     __end_of__initialization:
    72      001  0064               	clrf	4
    73      002  0A5E               	ljmp	_main	;jump to C main() function
    74                           
    75                           	psect	cstackBANK0
    76      010                     __pcstackBANK0:
    77      010                     ?_filter:
    78      010                     ??_filter:	
    79                           ; 1 bytes @ 0x0
    80                           
    81      010                     ?_generateOutput:	
    82                           ; 1 bytes @ 0x0
    83                           
    84      010                     ??_generateOutput:	
    85                           ; 1 bytes @ 0x0
    86                           
    87      010                     ?_main:	
    88                           ; 1 bytes @ 0x0
    89                           
    90                           
    91                           ; 1 bytes @ 0x0
    92      010                     	ds	1
    93      011                     filter@signalTime:
    94                           
    95                           ; 1 bytes @ 0x1
    96      011                     	ds	1
    97      012                     filter@count:
    98                           
    99                           ; 1 bytes @ 0x2
   100      012                     	ds	1
   101      013                     generateOutput@count:
   102                           
   103                           ; 2 bytes @ 0x3
   104      013                     	ds	2
   105      015                     generateOutput@i:
   106                           
   107                           ; 1 bytes @ 0x5
   108      015                     	ds	1
   109      016                     ??_main:
   110                           
   111                           ; 1 bytes @ 0x6
   112      016                     	ds	3
   113                           
   114                           	psect	maintext
   115      05E                     __pmaintext:	
   116 ;;
   117 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   118 ;;
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 31 in file "main.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;		None
   126 ;; Return value:  Size  Location     Type
   127 ;;                  1   22[None  ] void 
   128 ;; Registers used:
   129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+3, pclath, cstack
   130 ;; Tracked objects:
   131 ;;		On entry : B00/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMMON   BANK0
   135 ;;      Params:         0       0
   136 ;;      Locals:         0       0
   137 ;;      Temps:          0       3
   138 ;;      Totals:         0       3
   139 ;;Total ram usage:        3 bytes
   140 ;; Hardware stack levels required when called: 1
   141 ;; This function calls:
   142 ;;		_filter
   143 ;;		_generateOutput
   144 ;; This function is called by:
   145 ;;		Startup code after reset
   146 ;; This function uses a non-reentrant model
   147 ;;
   148                           
   149      05E                     _main:	
   150                           ;psect for function _main
   151                           
   152      05E                     l648:	
   153                           ;incstack = 0
   154                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1+btemp+3+pclath+cstack]
   155                           
   156                           
   157                           ;main.c: 34:     OSCCAL = 0x1E;
   158      05E  0C1E               	movlw	30
   159      05F  0025               	movwf	5	;volatile
   160      060                     l650:
   161                           
   162                           ;main.c: 38:     OPTION = 0x80;
   163      060  0C80               	movlw	128
   164      061  0002               	option
   165      062                     l652:
   166                           
   167                           ;main.c: 41:     GPIO = 0x00;
   168      062  0066               	clrf	6	;volatile
   169      063                     l654:
   170                           
   171                           ;main.c: 45:     TRIS = 0x0A;
   172      063  0C0A               	movlw	10
   173      064  0006               	tris	6
   174      065                     l656:
   175                           
   176                           ;main.c: 49:         GP2 = 0;
   177      065  0446               	bcf	6,2	;volatile
   178      066                     l658:
   179                           
   180                           ;main.c: 50:         filter(200);
   181      066  0CC8               	movlw	200
   182      067  09FE               	fcall	entry__filter
   183      068                     l660:
   184                           
   185                           ;main.c: 51:         _delay((1000000 - (500000 + 5)));
   186      068  0C03               	movlw	3
   187      069  0038               	movwf	??_main+2
   188      06A  0C8A               	movlw	138
   189      06B  0037               	movwf	??_main+1
   190      06C  0C54               	movlw	84
   191      06D  0036               	movwf	??_main
   192      06E                     u117:
   193      06E  02F6               	decfsz	??_main,f
   194      06F  0A6E               	goto	u117
   195      070  02F7               	decfsz	??_main+1,f
   196      071  0A6E               	goto	u117
   197      072  02F8               	decfsz	??_main+2,f
   198      073  0A6E               	goto	u117
   199      074                     l662:
   200                           
   201                           ;main.c: 53:         generateOutput();
   202      074  09FD               	fcall	entry__generateOutput
   203      075  0A65               	goto	l656
   204      076  0A00               	ljmp	start
   205      077                     __end_of_main:
   206                           
   207                           	psect	text1
   208      003                     __ptext1:	
   209 ;; *************** function _generateOutput *****************
   210 ;; Defined at:
   211 ;;		line 75 in file "main.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;  count           2    3[BANK0 ] unsigned int 
   216 ;;  i               1    5[BANK0 ] unsigned char 
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1   16[None  ] void 
   219 ;; Registers used:
   220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+3
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMMON   BANK0
   226 ;;      Params:         0       0
   227 ;;      Locals:         0       3
   228 ;;      Temps:          0       3
   229 ;;      Totals:         0       6
   230 ;;Total ram usage:        6 bytes
   231 ;; Hardware stack levels used: 1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239      003                     _generateOutput:	
   240                           ;psect for function _generateOutput
   241                           
   242      003                     l624:
   243                           
   244                           ;main.c: 78:     GP2 = 0;
   245      003  0446               	bcf	6,2	;volatile
   246      004                     l626:
   247                           
   248                           ;main.c: 79:     _delay(500000);
   249      004  0C03               	movlw	3
   250      005  0032               	movwf	??_generateOutput+2
   251      006  0C8A               	movlw	138
   252      007  0031               	movwf	??_generateOutput+1
   253      008  0C55               	movlw	85
   254      009  0030               	movwf	??_generateOutput
   255      00A                     u127:
   256      00A  02F0               	decfsz	??_generateOutput,f
   257      00B  0A0A               	goto	u127
   258      00C  02F1               	decfsz	??_generateOutput+1,f
   259      00D  0A0A               	goto	u127
   260      00E  02F2               	decfsz	??_generateOutput+2,f
   261      00F  0A0A               	goto	u127
   262      010  0A11               	nop2
   263      011                     l628:
   264                           
   265                           ;main.c: 82:     uint8_t i = 0;
   266      011  0075               	clrf	generateOutput@i
   267                           
   268                           ;main.c: 83:     while (3 > i){
   269      012  0A38               	goto	l646
   270      013                     l630:
   271                           
   272                           ;main.c: 84:         ++i;
   273      013  0C01               	movlw	1
   274      014  003F               	movwf	btemp+3
   275      015  021F               	movf	btemp+3,w
   276      016  01F5               	addwf	generateOutput@i,f
   277      017                     l632:
   278                           
   279                           ;main.c: 85:         uint16_t count = 0;
   280      017  0073               	clrf	generateOutput@count
   281      018  0074               	clrf	generateOutput@count+1
   282                           
   283                           ;main.c: 88:         while(500 > count){
   284      019  0A2F               	goto	l644
   285      01A                     l634:
   286                           
   287                           ;main.c: 89:             ++count;
   288      01A  0C01               	movlw	1
   289      01B  003C               	movwf	btemp
   290      01C  007D               	clrf	btemp+1
   291      01D  021C               	movf	wtemp0,w
   292      01E  01F3               	addwf	generateOutput@count,f
   293      01F  0603               	skipnc
   294      020  02B4               	incf	generateOutput@count+1,f
   295      021  021D               	movf	wtemp0+1,w
   296      022  01F4               	addwf	generateOutput@count+1,f
   297      023                     l636:
   298                           
   299                           ;main.c: 91:             GP2 = 1;
   300      023  0546               	bsf	6,2	;volatile
   301      024                     l638:
   302                           
   303                           ;main.c: 92:             _delay(500);
   304      024  0CA6               	movlw	166
   305      025  0030               	movwf	??_generateOutput
   306      026                     u137:
   307      026  02F0               	decfsz	??_generateOutput,f
   308      027  0A26               	goto	u137
   309      028  0000               	nop
   310      029                     l640:
   311                           
   312                           ;main.c: 93:             GP2 = 0;
   313      029  0446               	bcf	6,2	;volatile
   314      02A                     l642:
   315                           
   316                           ;main.c: 94:             _delay(500);
   317      02A  0CA6               	movlw	166
   318      02B  0030               	movwf	??_generateOutput
   319      02C                     u147:
   320      02C  02F0               	decfsz	??_generateOutput,f
   321      02D  0A2C               	goto	u147
   322      02E  0000               	nop
   323      02F                     l644:
   324                           
   325                           ;main.c: 88:         while(500 > count){
   326      02F  0C01               	movlw	1
   327      030  0094               	subwf	generateOutput@count+1,w
   328      031  0CF4               	movlw	244
   329      032  0643               	skipnz
   330      033  0093               	subwf	generateOutput@count,w
   331      034  0703               	skipc
   332      035  0A37               	goto	u91
   333      036  0A38               	goto	u90
   334      037                     u91:
   335      037  0A1A               	goto	l634
   336      038                     u90:
   337      038                     l646:
   338                           
   339                           ;main.c: 83:     while (3 > i){
   340      038  0C03               	movlw	3
   341      039  0095               	subwf	generateOutput@i,w
   342      03A  0703               	skipc
   343      03B  0A3D               	goto	u101
   344      03C  0A3E               	goto	u100
   345      03D                     u101:
   346      03D  0A13               	goto	l630
   347      03E                     u100:
   348      03E                     l46:
   349      03E  0800               	retlw	0
   350      03F                     __end_of_generateOutput:
   351                           
   352                           	psect	jmp_tab
   353      0FD                     __pjmp_tab:	
   354                           ;incstack = 0
   355                           ; Regs used in _generateOutput: [wreg-fsr0h+status,2-btemp+1+btemp+3]
   356                           
   357      0FD                     entry__generateOutput:
   358      0FD  0A03               	ljmp	_generateOutput
   359      0FE                     entry__filter:	
   360                           ;incstack = 0
   361                           ; Regs used in _filter: [wreg-fsr0h+status,2+status,0+btemp+3]
   362                           
   363      0FE  0A3F               	ljmp	_filter
   364                           
   365                           	psect	text2
   366      03F                     __ptext2:	
   367 ;; *************** function _filter *****************
   368 ;; Defined at:
   369 ;;		line 58 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  signalTime      1    wreg     unsigned char 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  signalTime      1    1[BANK0 ] unsigned char 
   374 ;;  count           1    2[BANK0 ] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1   12[None  ] void 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+3
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0
   384 ;;      Params:         0       0
   385 ;;      Locals:         0       2
   386 ;;      Temps:          0       1
   387 ;;      Totals:         0       3
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397      03F                     _filter:	
   398                           ;psect for function _filter
   399                           
   400                           
   401                           ;filter@signalTime stored from wreg
   402      03F  0031               	movwf	filter@signalTime
   403      040                     l610:
   404                           
   405                           ;main.c: 59:     uint8_t count = 0;
   406      040  0072               	clrf	filter@count
   407      041                     l612:	
   408                           ;main.c: 61:     while (1 == GP3) {
   409                           
   410                           
   411                           ;main.c: 61:     while (1 == GP3) {
   412      041  0666               	btfsc	6,3	;volatile
   413      042  0A44               	goto	u61
   414      043  0A45               	goto	u60
   415      044                     u61:
   416      044  0A41               	goto	l612
   417      045                     u60:
   418      045  0A57               	goto	l622
   419      046                     l614:
   420                           
   421                           ;main.c: 65:         if (GP3 == 0) {
   422      046  0666               	btfsc	6,3	;volatile
   423      047  0A49               	goto	u71
   424      048  0A4A               	goto	u70
   425      049                     u71:
   426      049  0A4C               	goto	l618
   427      04A                     u70:
   428      04A                     l616:
   429                           
   430                           ;main.c: 66:             count = 0;
   431      04A  0072               	clrf	filter@count
   432                           
   433                           ;main.c: 67:         } else {
   434      04B  0A50               	goto	l620
   435      04C                     l618:
   436                           
   437                           ;main.c: 69:             count++;
   438      04C  0C01               	movlw	1
   439      04D  003F               	movwf	btemp+3
   440      04E  021F               	movf	btemp+3,w
   441      04F  01F2               	addwf	filter@count,f
   442      050                     l620:
   443                           
   444                           ;main.c: 71:         _delay(970);
   445      050  0CC1               	movlw	193
   446      051  0030               	movwf	??_filter
   447      052                     u157:
   448      052  0A53               	nop2
   449      053  02F0               	decfsz	??_filter,f
   450      054  0A52               	goto	u157
   451      055  0A56               	nop2
   452      056  0A57               	nop2
   453      057                     l622:
   454                           
   455                           ;main.c: 63:     while (count < signalTime) {
   456      057  0211               	movf	filter@signalTime,w
   457      058  0092               	subwf	filter@count,w
   458      059  0703               	skipc
   459      05A  0A5C               	goto	u81
   460      05B  0A5D               	goto	u80
   461      05C                     u81:
   462      05C  0A46               	goto	l614
   463      05D                     u80:
   464      05D                     l37:
   465      05D  0800               	retlw	0
   466      05E                     __end_of_filter:
   467      01C                     btemp	set	28	;btemp
   468      01C                     wtemp0	set	28
   469      01E                     wtemp1	set	30
   470      01C                     ttemp0	set	28
   471      01C                     ltemp0	set	28
   472                           
   473                           	psect	idloc
   474                           
   475                           ;Config register IDLOC0 @ 0x100
   476                           ;	unspecified, using default values
   477      100                     	org	256
   478      100  0FFF               	dw	4095
   479                           
   480                           ;Config register IDLOC1 @ 0x101
   481                           ;	unspecified, using default values
   482      101                     	org	257
   483      101  0FFF               	dw	4095
   484                           
   485                           ;Config register IDLOC2 @ 0x102
   486                           ;	unspecified, using default values
   487      102                     	org	258
   488      102  0FFF               	dw	4095
   489                           
   490                           ;Config register IDLOC3 @ 0x103
   491                           ;	unspecified, using default values
   492      103                     	org	259
   493      103  0FFF               	dw	4095
   494                           
   495                           	psect	config
   496                           
   497                           ;Config register CONFIG @ 0xFFF
   498                           ;	Oscillator
   499                           ;	OSC = 0x1, unprogrammed default
   500                           ;	Watchdog Timer
   501                           ;	WDTE = OFF, WDT disabled
   502                           ;	Code Protect
   503                           ;	CP = OFF, Code protection off
   504                           ;	Master Clear Enable
   505                           ;	MCLRE = OFF, GP3/MCLR pin fuction is digital I/O, MCLR internally tied to VDD
   506      FFF                     	org	4095
   507      FFF  0FEB               	dw	4075

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      9       9

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_generateOutput

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      95
                                              6 BANK0      3     3      0
                             _filter
                     _generateOutput
 ---------------------------------------------------------------------------------
 (1) _generateOutput                                       6     6      0      48
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _filter                                               3     3      0      47
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _filter
   _generateOutput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      9       9       3       64.3%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 08 01:07:31 2023

                     l37 005D                       l46 003E                       u60 0045  
                     u61 0044                       u70 004A                       u71 0049  
                     u80 005D                       u81 005C                       u90 0038  
                     u91 0037                       fsr 0004                      l610 0040  
                    l620 0050                      l612 0041                      l614 0046  
                    l622 0057                      l630 0013                      l616 004A  
                    l640 0029                      l632 0017                      l624 0003  
                    l618 004C                      l642 002A                      l634 001A  
                    l626 0004                      l650 0060                      l636 0023  
                    l644 002F                      l628 0011                      l660 0068  
                    l652 0062                      l638 0024                      l646 0038  
                    l662 0074                      l654 0063                      l656 0065  
                    l648 005E                      l658 0066                      _GP2 0032  
                    _GP3 0033                      u100 003E                      u101 003D  
                    u117 006E                      u127 000A                      u137 0026  
                    u147 002C                      u157 0052                     _GPIO 0006  
                   _TRIS 0006                     _main 005E                     btemp 001C  
                   start 0000              filter@count 0012                    ?_main 0010  
   entry__generateOutput 00FD                    ltemp0 001C                    ttemp0 001C  
                  wtemp0 001C                    wtemp1 001E          __initialization 0001  
           __end_of_main 0077                   ??_main 0016         ??_generateOutput 0010  
                 _OSCCAL 0005                   _OPTION 0000          generateOutput@i 0015  
                 _filter 003F  __end_of__initialization 0001      generateOutput@count 0013  
             __pmaintext 005E                  ?_filter 0010             entry__filter 00FE  
                __ptext1 0003                  __ptext2 003F     end_of_initialization 0001  
         __end_of_filter 005E      start_initialization 0001                 ??_filter 0010  
              ___latbits 0000            __pcstackBANK0 0010                __pjmp_tab 00FD  
         _generateOutput 0003   __end_of_generateOutput 003F          ?_generateOutput 0010  
       filter@signalTime 0011  
